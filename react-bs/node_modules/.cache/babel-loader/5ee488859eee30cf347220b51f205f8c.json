{"ast":null,"code":"var _jsxFileName = \"/home/pawan/frontend/react/react-bs/src/SearchPage.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport './index.css';\nimport List from './List';\nimport axios from 'axios';\nimport Paginate from './Paginate';\nimport SimpleSelect from './Filter';\n\nclass SearchPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.newUpdateParam = (key, param) => {\n      this.setState({\n        [key]: param\n      }, () => this.getMovies());\n    };\n\n    this.updateParams = (search, genre, sortBy) => {\n      this.setState({\n        search: search,\n        genre: genre,\n        sortBy: sortBy\n      }, () => this.getMovies());\n    };\n\n    this.changePage = pageno => {\n      this.setState({\n        currentPage: pageno\n      });\n    };\n\n    this.state = {\n      currentPage: 1,\n      moviesPerPage: 24,\n      result: [],\n      totalMovies: 0,\n      search: \"\",\n      genre: \"All\",\n      sortBy: \"vote_average DESC\"\n    };\n  }\n\n  getquery() {\n    const query = [];\n\n    if (this.state.search !== \"\") {\n      query.push('search=' + this.state.search);\n    }\n\n    if (this.state.genre !== \"All\") {\n      query.push('genre=' + this.state.genre);\n    }\n\n    query.push('sortby=' + this.state.sortBy);\n    return 'http://localhost:8080/movie/catalogue?' + query.join('&');\n  }\n\n  getMovies() {\n    axios.get(this.getquery()).then(res => {\n      if (res.data !== null) {\n        this.setState({\n          result: res.data,\n          totalMovies: res.data.length\n        });\n      } else {\n        this.setState({\n          result: [],\n          totalMovies: 0\n        });\n      }\n    });\n  }\n\n  componentDidMount() {\n    console.log(\"component did mount\");\n    const queryParams = this.props.location.search;\n\n    if (queryParams !== \"\") {\n      // for now we are only considering one qyery param\n      const params = queryParams.slice(1).split(\"&\");\n\n      if (params[0].charAt(0) === 's') {\n        const searchParam = params[0].split(\"=\")[1];\n        this.newUpdateParam(\"search\", searchParam);\n      } else if (params[0].charAt(0) === 'g') {\n        const genreParam = params[0].split(\"=\")[1];\n        this.newUpdateParam(\"genre\", genreParam);\n      }\n    } else {\n      this.getMovies();\n    }\n  }\n\n  render() {\n    const resultList = this.state.result;\n    const result = this.state.result.slice((this.state.currentPage - 1) * this.state.moviesPerPage, this.state.currentPage * this.state.moviesPerPage);\n    const initparams = {\n      state: this.state.search,\n      genre: this.state.genre,\n      sortby: this.state.sortBy\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: \"#d2d2d275\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(SimpleSelect, {\n      updateParams: this.updateParams,\n      initparams: initparams,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(List, {\n      list: result,\n      catalogueHidden: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Paginate, {\n      totalMovies: this.state.totalMovies,\n      currentPage: this.state.currentPage,\n      moviePerPage: this.state.moviesPerPage,\n      changePage: this.changePage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default SearchPage;","map":{"version":3,"sources":["/home/pawan/frontend/react/react-bs/src/SearchPage.js"],"names":["React","Component","List","axios","Paginate","SimpleSelect","SearchPage","constructor","props","newUpdateParam","key","param","setState","getMovies","updateParams","search","genre","sortBy","changePage","pageno","currentPage","state","moviesPerPage","result","totalMovies","getquery","query","push","join","get","then","res","data","length","componentDidMount","console","log","queryParams","location","params","slice","split","charAt","searchParam","genreParam","render","resultList","initparams","sortby","backgroundColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport './index.css';\nimport List from './List'\nimport axios from 'axios'\nimport Paginate from './Paginate'\nimport SimpleSelect from './Filter'\n\n\nclass SearchPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentPage: 1,\n            moviesPerPage: 24,\n            result: [],\n            totalMovies: 0,\n            search: \"\",\n            genre: \"All\",\n            sortBy: \"vote_average DESC\"\n        }\n    }\n\n    getquery() {\n        const query = [];\n        if (this.state.search !== \"\") {\n            query.push('search=' + this.state.search)\n        }\n        if (this.state.genre !== \"All\") {\n            query.push('genre=' + this.state.genre)\n        }\n        query.push('sortby=' + this.state.sortBy)\n        return 'http://localhost:8080/movie/catalogue?' + query.join('&')\n    }\n\n\n    getMovies() {\n        axios.get(this.getquery())\n            .then(res => {\n                if (res.data !== null) {\n                    this.setState({\n                        result: res.data,\n                        totalMovies: res.data.length,\n                    }\n                    )\n                } else {\n                    this.setState({\n                        result: [],\n                        totalMovies: 0,\n                    }\n                    )\n                }\n            }\n            )\n    }\n\n    componentDidMount() {\n        console.log(\"component did mount\")\n        const queryParams = this.props.location.search\n        if (queryParams !== \"\") {\n            // for now we are only considering one qyery param\n            const params = queryParams.slice(1).split(\"&\")\n            if (params[0].charAt(0) === 's') {\n                const searchParam = params[0].split(\"=\")[1]\n                this.newUpdateParam(\"search\", searchParam)\n            } else if (params[0].charAt(0) === 'g') {\n                const genreParam = params[0].split(\"=\")[1]\n                this.newUpdateParam(\"genre\", genreParam)\n            }\n        } else {\n            this.getMovies()\n        }\n    }\n\n\n    newUpdateParam = (key, param) => {\n        this.setState({\n            [key] : param,\n        },\n            () => this.getMovies()\n        )\n    }\n\n    updateParams = (search, genre, sortBy) => {\n        this.setState({\n            search: search,\n            genre: genre,\n            sortBy: sortBy,\n        },\n            () => this.getMovies()\n        )\n    }\n\n\n    changePage = (pageno) => {\n        this.setState({\n            currentPage: pageno,\n        })\n    }\n\n    render() {\n\n        const resultList = this.state.result\n\n        const result = this.state.result.slice((this.state.currentPage - 1) * this.state.moviesPerPage, this.state.currentPage * this.state.moviesPerPage);\n\n        const initparams = {\n            state: this.state.search,\n            genre: this.state.genre,\n            sortby: this.state.sortBy\n        }\n\n        return (\n            <div style={{ backgroundColor: \"#d2d2d275\" }}>\n\n                <SimpleSelect updateParams={this.updateParams} initparams={initparams} />\n                <List list={result} catalogueHidden={true} />\n                <Paginate totalMovies={this.state.totalMovies} currentPage={this.state.currentPage} moviePerPage={this.state.moviesPerPage} changePage={this.changePage} />\n\n            </div >\n        );\n    }\n}\n\nexport default SearchPage;\n"]},"metadata":{},"sourceType":"module"}