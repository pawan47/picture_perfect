{"ast":null,"code":"var _jsxFileName = \"/home/pawan/frontend/react/react-bs/src/List.js\";\nimport React from 'react';\nimport './App.css';\nimport Pagination from 'react-bootstrap/Pagination';\n\nconst paginate = (pagelist, currentPage) => {\n  const items = []; // if(currentPage === 1)\n\n  items.push( /*#__PURE__*/React.createElement(Pagination.First, {\n    key: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 18\n    }\n  }));\n  items.push( /*#__PURE__*/React.createElement(Pagination.Prev, {\n    key: -1,\n    disabled: currentPage === 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 16\n    }\n  }));\n  pagelist.forEach(element => {\n    items.push( /*#__PURE__*/React.createElement(Pagination.Item, {\n      key: element,\n      active: currentPage === element,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 20\n      }\n    }, element));\n  });\n  items.push( /*#__PURE__*/React.createElement(Pagination.Next, {\n    disabled: currentPage === 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 16\n    }\n  }));\n  items.push( /*#__PURE__*/React.createElement(Pagination.Last, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 16\n    }\n  }));\n  return items;\n};\n\nfunction List({\n  list,\n  moviePerPage,\n  totalMovies,\n  currentPage,\n  changePage\n}) {\n  const postlist = list.length ? list.map(movie => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6 col-sm-4 col-md-3 col-xl-2 mb-3 mt-3 \",\n      key: movie.movie_id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"box \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: movie.thumbnail_link,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \" mb-3\",\n      src: movie.thumbnail_link,\n      alt: movie.movie_id,\n      style: {\n        borderRadius: 10,\n        width: 150,\n        height: 220\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 29\n      }\n    }))));\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"Loading\");\n  const totalPage = Math.ceil(totalMovies / moviePerPage);\n  const pagelist = [];\n\n  for (let i = Math.max(-1, currentPage - 4); i <= Math.min(totalPage + 2, currentPage + 4); i++) {\n    pagelist.push(i);\n  }\n\n  const pagination = pagelist.length ? pagelist.map(pageno => {\n    let stylecss = 'page-item';\n    let contentPagination = pageno.toString();\n    let disprev = false;\n    let disnext = false;\n\n    if (pageno === 0) {\n      contentPagination = 'Previous';\n\n      if (currentPage === 1) {\n        stylecss += ' disabled';\n        disprev = true;\n      }\n    } else if (pageno === totalPage + 1) {\n      contentPagination = 'Next';\n\n      if (currentPage === totalPage) {\n        stylecss += ' disabled';\n        disnext = true;\n      }\n    } else if (pageno === currentPage) {\n      stylecss += ' active';\n    }\n\n    var spanArea;\n\n    if (pageno === -1) {\n      spanArea = /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 28\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        \"aria-hidden\": \"true\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 34\n        }\n      }, \"\\xAB\"), /*#__PURE__*/React.createElement(\"span\", {\n        class: \"sr-only\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }\n      }, contentPagination), \" \");\n    } else {\n      spanArea = {\n        contentPagination\n      };\n    }\n\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: stylecss,\n      key: pageno,\n      onClick: () => {\n        if (disprev || disnext) {\n          return false;\n        } else if (contentPagination === 'next') {\n          changePage(currentPage + 1);\n        } else if (pageno === 0) {\n          changePage(currentPage - 1);\n        } else {\n          changePage(pageno);\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"page-link\",\n      href: \"#item\",\n      \"aria-label\": contentPagination,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, spanArea));\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid body-cont\",\n    style: {\n      paddingTop: 5,\n      paddingBottom: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-outline-primary my-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }, \"Catalogue \", ' ', /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-chevron-right\",\n    style: {\n      marginTop: 4\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }, postlist)), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"pagination justify-content-center mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }, pagination)));\n}\n\nexport default List;","map":{"version":3,"sources":["/home/pawan/frontend/react/react-bs/src/List.js"],"names":["React","Pagination","paginate","pagelist","currentPage","items","push","forEach","element","List","list","moviePerPage","totalMovies","changePage","postlist","length","map","movie","movie_id","thumbnail_link","borderRadius","width","height","totalPage","Math","ceil","i","max","min","pagination","pageno","stylecss","contentPagination","toString","disprev","disnext","spanArea","paddingTop","paddingBottom","marginTop"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './App.css'\nimport Pagination from 'react-bootstrap/Pagination'\n\nconst paginate = (pagelist, currentPage) => {\n    const items = []\n    // if(currentPage === 1)\n    items.push(  <Pagination.First key = {0} />)\n    items.push(<Pagination.Prev key = {-1} disabled={currentPage === 1} />)\n    pagelist.forEach(element => {\n        items.push(<Pagination.Item key={element} active={currentPage === element}>\n        {element}\n      </Pagination.Item>)\n    });\n    items.push(<Pagination.Next disabled={currentPage === 1}/>)\n    items.push(<Pagination.Last />)\n    return items\n}\n\n\nfunction List({ list, moviePerPage, totalMovies, currentPage, changePage }) {\n    const postlist = list.length ? (\n        list.map(movie => {\n            return (\n                <div className='col-6 col-sm-4 col-md-3 col-xl-2 mb-3 mt-3 ' key={movie.movie_id}>\n                    <div className='box '>\n                        <a href={movie.thumbnail_link}>\n                            <img className=' mb-3' src={movie.thumbnail_link} alt={movie.movie_id}\n                                style={{ borderRadius: 10, width: 150, height: 220 }} />\n                        </a>\n                    </div>\n                </div>\n            )\n        })\n    ) : (\n            <div className=\"text-center\">\n                Loading\n            </div>\n        )\n    const totalPage = Math.ceil(totalMovies / moviePerPage)\n    const pagelist = []\n    for (let i = Math.max(-1, currentPage - 4); i <= Math.min(totalPage + 2, currentPage + 4); i++) {\n        pagelist.push(i)\n    }\n\n    const pagination = pagelist.length ? (\n        pagelist.map(pageno => {\n            let stylecss = 'page-item'\n            let contentPagination = pageno.toString()\n            let disprev = false\n            let disnext = false\n            if (pageno === 0) {\n                contentPagination = 'Previous'\n                if (currentPage === 1) {\n                    stylecss += ' disabled'\n                    disprev = true\n                }\n            } else if (pageno === totalPage + 1) {\n                contentPagination = 'Next'\n                if (currentPage === totalPage) {\n                    stylecss += ' disabled'\n                    disnext = true\n                }\n            } else if (pageno === currentPage) {\n                stylecss += ' active'\n            }\n\n            var spanArea;\n            if (pageno === -1) {\n                spanArea = <span><span aria-hidden=\"true\">&laquo;</span>\n                    <span class=\"sr-only\">{contentPagination}</span> </span>\n            } else {\n                spanArea = { contentPagination }\n            }\n            return (<li className={stylecss} key={pageno}\n                onClick={() => {\n                    if (disprev || disnext) {\n                        return false;\n                    } else if (contentPagination === 'next') {\n                        changePage(currentPage + 1)\n                    }\n                    else if (pageno === 0) {\n                        changePage(currentPage - 1)\n                    }\n                    else {\n                        changePage(pageno)\n                    }\n                }}>\n\n                <a className=\"page-link\" href=\"#item\" aria-label={contentPagination}>\n                    {spanArea}\n                </a>\n            </li>)\n        }\n        )\n    ) : (\n            null\n        )\n\n\n    return (\n        <div className='container-fluid body-cont' style={{ paddingTop: 5, paddingBottom: 15 }}>\n            <main>\n                <div className='container'>\n                    <button type='button' className='btn btn-outline-primary my-3'>\n                        Catalogue {' '}\n                        <i className='fa fa-chevron-right' style={{ marginTop: 4 }}>\n                        </i>\n                    </button>\n                    <div className='row'>\n                        {postlist}\n                    </div>\n                </div>\n                <ul className=\"pagination justify-content-center mb-4\">\n                    {pagination}\n                </ul>\n            </main>\n        </div>\n    )\n}\n\nexport default List;"]},"metadata":{},"sourceType":"module"}