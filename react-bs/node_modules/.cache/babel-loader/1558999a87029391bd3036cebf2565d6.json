{"ast":null,"code":"var _jsxFileName = \"/home/pawan/frontend/react/react-bs/src/SearchPage.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport './index.css';\nimport List from './List';\nimport axios from 'axios';\nimport Paginate from './Paginate';\nimport SimpleSelect from './Filter';\nimport GetInitParams from './GetInitParams';\n\nclass SearchPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateParams = (search, genre, sortBy) => {\n      this.setState({\n        search: search,\n        genre: genre,\n        sortBy: sortBy\n      }, () => this.getMovies());\n    };\n\n    this.changePage = pageno => {\n      this.setState({\n        currentPage: pageno\n      });\n    };\n\n    this.state = {\n      currentPage: 1,\n      moviesPerPage: 24,\n      result: [],\n      totalMovies: 0,\n      search: GetInitParams(\"search\", this.props.location.search),\n      genre: GetInitParams(\"genre\", this.props.location.search),\n      sortBy: \"vote_average DESC\"\n    };\n  }\n\n  getquery() {\n    const query = [];\n    this.state.search !== \"\" ? query.push('search=' + this.state.search) : null;\n    this.state.genre !== \"All\" ? query.push('genre=' + this.state.genre) : null;\n    query.push('sortby=' + this.state.sortBy);\n    return 'http://localhost:8080/movie/catalogue?' + query.join('&');\n  }\n\n  getMovies() {\n    axios.get(this.getquery()).then(res => {\n      if (res.data !== null) {\n        this.setState({\n          result: res.data,\n          totalMovies: res.data.length\n        });\n      } else {\n        this.setState({\n          result: [],\n          totalMovies: 0\n        });\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.getMovies();\n  } // newUpdateParam = (key, param) => {\n  //     this.setState({\n  //         [key]: param,\n  //     },\n  //         () => this.getMovies()\n  //     )\n  // }\n\n\n  render() {\n    const result = this.state.result.slice((this.state.currentPage - 1) * this.state.moviesPerPage, this.state.currentPage * this.state.moviesPerPage);\n    const initparams = {\n      search: this.state.search,\n      genre: this.state.genre\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: \"#d2d2d275\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(SimpleSelect, {\n      updateParams: this.updateParams,\n      initparams: initparams,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(List, {\n      list: result,\n      catalogueHidden: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Paginate, {\n      totalMovies: this.state.totalMovies,\n      currentPage: this.state.currentPage,\n      moviePerPage: this.state.moviesPerPage,\n      changePage: this.changePage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default SearchPage;","map":{"version":3,"sources":["/home/pawan/frontend/react/react-bs/src/SearchPage.js"],"names":["React","Component","List","axios","Paginate","SimpleSelect","GetInitParams","SearchPage","constructor","props","updateParams","search","genre","sortBy","setState","getMovies","changePage","pageno","currentPage","state","moviesPerPage","result","totalMovies","location","getquery","query","push","join","get","then","res","data","length","componentDidMount","render","slice","initparams","backgroundColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport './index.css';\nimport List from './List'\nimport axios from 'axios'\nimport Paginate from './Paginate'\nimport SimpleSelect from './Filter'\nimport GetInitParams from './GetInitParams'\n\n\nclass SearchPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentPage: 1,\n            moviesPerPage: 24,\n            result: [],\n            totalMovies: 0,\n            search: GetInitParams(\"search\", this.props.location.search),\n            genre: GetInitParams(\"genre\", this.props.location.search),\n            sortBy: \"vote_average DESC\"\n        }\n    }\n\n    getquery() {\n        const query = [];\n        this.state.search !== \"\" ? query.push('search=' + this.state.search) : null\n        this.state.genre !== \"All\" ? query.push('genre=' + this.state.genre) : null\n        query.push('sortby=' + this.state.sortBy)\n        return 'http://localhost:8080/movie/catalogue?' + query.join('&')\n    }\n\n\n    getMovies() {\n        axios.get(this.getquery())\n            .then(res => {\n\n\n                \n                if (res.data !== null) {\n                    this.setState({\n                        result: res.data,\n                        totalMovies: res.data.length,\n                    }\n                    )\n                } else {\n                    this.setState({\n                        result: [],\n                        totalMovies: 0,\n                    }\n                    )\n                }\n            }\n            )\n    }\n\n    componentDidMount() {\n        this.getMovies()\n    }\n\n\n    // newUpdateParam = (key, param) => {\n    //     this.setState({\n    //         [key]: param,\n    //     },\n    //         () => this.getMovies()\n    //     )\n    // }\n\n    updateParams = (search, genre, sortBy) => {\n        this.setState({\n            search: search,\n            genre: genre,\n            sortBy: sortBy,\n        },\n            () => this.getMovies()\n        )\n    }\n\n\n    changePage = (pageno) => {\n        this.setState({\n            currentPage: pageno,\n        })\n    }\n\n    render() {\n\n\n        const result = this.state.result.slice((this.state.currentPage - 1) * this.state.moviesPerPage, this.state.currentPage * this.state.moviesPerPage);\n\n        const initparams = {\n            search: this.state.search,\n            genre: this.state.genre,\n        }\n\n        return (\n            <div style={{ backgroundColor: \"#d2d2d275\" }}>\n\n                <SimpleSelect updateParams={this.updateParams} initparams={initparams} />\n                <List list={result} catalogueHidden={true} />\n                <Paginate totalMovies={this.state.totalMovies} currentPage={this.state.currentPage} moviePerPage={this.state.moviesPerPage} changePage={this.changePage} />\n\n            </div >\n        );\n    }\n}\n\nexport default SearchPage;\n"]},"metadata":{},"sourceType":"module"}